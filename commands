#!/bin/bash -e
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$(dirname $0)/../common/functions"

#see http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html
INSTALL_COMMAND=$(cat <<EOF
apt-get update
apt-get install -y -q wget curl
apt-get install -y -q build-essential
apt-get install -y -q cmake
curl -L 'http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.7/opencv-2.4.7.tar.gz/' | tar xvzf -
mkdir -p opencv-2.4.7/release
cd opencv-2.4.7/release
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..
make && make install
cd /
rm -rf opencv-2.4.7
EOF
)

case "$1" in

  opencv:install)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    verify_app_name "$2"
    APP="$2"; IMAGE="dokku/$APP"
    echo "-----> Injecting OpenCV in $APP"

    id=$(docker run -d $IMAGE /bin/bash -e -c "$INSTALL_COMMAND")
    #enable logs
    docker attach $id
    test $(docker wait $id) -eq 0
    docker commit $id $IMAGE > /dev/null
    ;;

  help | opencv:help)
    cat && cat<<EOF
    opencv:install <app>, Installs opencv into a container
EOF
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac
